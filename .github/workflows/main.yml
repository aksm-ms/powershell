name: Run Azure Login Integration Tests
on: [workflow_dispatch]

env:
  AZURE_WEBAPP_NAME: dotnetwebapplima    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NUGET_VERSION: '5.3.1'                # set this to the node version to use

jobs: 
  sovereign-cloud-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
        with:
         repository: Azure-Samples/dotnet-sample
         token: ${{ secrets.GITSSHKEY }} 
         ref: master
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - run: |
          az account show
          
      - name: 'Azure PowerShell login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - uses: azure/powershell@v1
        with:
          inlineScript: "Get-AzContext"
          azPSVersion: "latest"
          
      - name: 'Azure WebApps-deploy - deploy to web app'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/SampleWebApplication/'
          
      - name: Azure sql-action
        uses: Azure/sql-action@v1
        with:
          server-name: <your server>
          connection-string: ${{â€¯secrets.AZURE_SQL_CONNECTION_STRING }}
          sql-file: '${{ github.workspace }}/AzureSqlActionPackages/TestSqlFile.sql'
          arguments: '-t 10'
          
      - name: Azure Mysql deploy
        uses: Azure/mysql-action@v1
        with:
          server-name: ak-mysql-db.mysql.database.azure.com
          connection-string: ${{secrets.MYSQL_CONN_STRING}}
          sql-file: ${{ github.workspace }}/AzureMysqlPackages/run.sql
          
      - name: 'Azure Postgresql deploy'
        uses: Azure/postgresql@v1
        with:
          connection-string: ${{ secrets.POSTGRESQL_CONN_STRING }}
          server-name: "ak-db.postgres.database.azure.com"
          plsql-file: "AzurePostgresqlPackages/run.sql"
          
      - name: 'Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
         app-name: ak-node-func-app
         package: ${{ github.workspace }}/AzureFunctionPackages/azure-sql-db-node-rest-api.zip
       
  functions-container-test:
    runs-on: windows-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@master
        with:
          repository: AmrutaKawade/ContainerFunctionApp
          token: ${{ secrets.GITSSHKEY }} 
          ref: master

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          #login-server: contoso.azurecr.io
          login-server: index.docker.io
          username: ${{ secrets.REGISTRY_USERNAME }} # which registry
          password: ${{ secrets.REGISTRY_PASSWORD }} # which registry

      - name: 'Compose Customized Docker Image'
        shell: bash
        run: |
          # If your function app project is not located in your repository's root
           # Please change the path to your directory for docker build
          docker login docker.io -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
          docker build . -t docker.io/amrutakawade/azurefunctionsimage:latest
          docker push docker.io/amrutakawade/azurefunctionsimage:latest
        
      - name: 'Run Azure Functions Container Action'
        uses: azure/functions-container-action@v1
        id: fa
        with:
          app-name: containerfunapp
          image: amrutakawade/azurefunctionsimage:latest

   

     
     
